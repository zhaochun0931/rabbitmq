docker login rabbitmq.packages.broadcom.com --username='username' --password='password'


docker pull rabbitmq.packages.broadcom.com/vmware-tanzu-rabbitmq:4.2.0







docker compose up







# upstream

docker exec -it node1 bash

rabbitmqctl add_vhost rabbitmq_schema_definition_sync
rabbitmqctl add_vhost "vhost1" --tags "standby_replication"
rabbitmqctl set_permissions --vhost vhost1 admin ".*" ".*" ".*"
rabbitmqctl set_permissions --vhost vhost1 test-user ".*" ".*" ".*"
rabbitmqctl set_policy --vhost "vhost1" osr "^.*" '{"remote-dc-replicate": true}' --apply-to "queues"









rabbitmq-diagnostics inspect_standby_upstream_metrics












# downstream

docker exec -it node2 bash

rabbitmq-diagnostics inspect_standby_downstream_metrics

rabbitmqctl display_disk_space_used_by_standby_replication_data

rabbitmq-diagnostics inspect_local_data_available_for_standby_replication_recovery









$ rabbitmqctl promote_standby_replication_downstream_cluster
Will promote cluster to upstream...
last_timestamp	first_timestamp	virtual_host	message_count	stream_count
2025-03-27 08:00:59	2025-03-27 07:44:04	vhost1	2	0
$

$ rabbitmqctl promote_standby_replication_downstream_cluster --formatter pretty_table
Will promote cluster to upstream...
┌─────────────────────┬─────────────────────┬──────────────┬───────────────┬──────────────┐
│ last_timestamp      │ first_timestamp     │ virtual_host │ message_count │ stream_count │
├─────────────────────┼─────────────────────┼──────────────┼───────────────┼──────────────┤
│ 2025-03-27 08:00:59 │ 2025-03-27 08:00:59 │ vhost1       │ 0             │ 0            │
└─────────────────────┴─────────────────────┴──────────────┴───────────────┴──────────────┘
$




rabbitmqctl schema_replication_status
rabbitmqctl standby_replication_status



rabbitmq [ ~ ]$ rabbitmqctl schema_replication_status
Schema replication status on node rabbit@node1
Operating mode: upstream
State: syncing
Upstream endpoint(s): localhost:5672
Upstream username: test-user

rabbitmq [ ~ ]$

rabbitmq [ ~ ]$ rabbitmqctl standby_replication_status
Standby replication status on node rabbit@node1
state	operating_mode	virtual_host
running	upstream	vhost1
rabbitmq [ ~ ]$










# create the queue in the upstream and it will sync up to the downstream automatically




# send the message to the queue in the upstream



# promote, run this command from the downstream, the message will become available in the downstream

rabbitmqctl promote_standby_replication_downstream_cluster

