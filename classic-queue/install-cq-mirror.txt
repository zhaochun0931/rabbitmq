In a cluster, the classic queue can be mirrored to other nodes of the cluster by default, but it cannot be persistent without the HA policy. 
In other words, the message will lost across the node reboot.


# the queue beginning with cq will be mirrored to all the nodes of the cluster, stop any node will not impact the service


# set up a rabbitmq cluster with 3 nodes

# create a classic queue



# create a policy for HA with CLI

rabbitmqctl set_policy my-cq-mirroring "^cq" '{"ha-mode":"all"}' --apply-to=queues

rabbitmqctl set_policy my-cq-mirroring "^cq" '{"ha-mode":"all","ha-sync-mode":"automatic"}'  --vhost / 









rabbitmqctl list_policies --vhost / --formatter pretty_table


# rabbitmqctl list_policies --vhost / --formatter pretty_table
Listing policies for vhost "/" ...
┌───────┬─────────────────┬─────────┬──────────┬──────────────────────────────────────────────┬──────────┐
│ vhost │ name            │ pattern │ apply-to │ definition                                   │ priority │
├───────┼─────────────────┼─────────┼──────────┼──────────────────────────────────────────────┼──────────┤
│ /     │ my-cq-mirroring │ ^       │ all      │ {"ha-mode":"all","ha-sync-mode":"automatic"} │ 0        │
└───────┴─────────────────┴─────────┴──────────┴──────────────────────────────────────────────┴──────────┘
#


# create a classic queue begining with cq, for example cq1, cq2



you will see the replica was synced to the peer nodes
